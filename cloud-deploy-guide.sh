#!/bin/bash

# 云部署脚本 - 使用Railway部署在线编译器

echo "===== 在线编译器云部署指南 ====="

echo ""
echo "===== 方案一：使用Railway（推荐） ====="
echo "1. 访问 https://railway.app 并注册账户"
echo "2. 点击 'New Project' -> 'Deploy from GitHub repo'"
echo "3. 将您的项目推送到GitHub仓库"
echo "4. 在Railway中连接您的GitHub仓库"
echo "5. Railway会自动检测Node.js项目并部署"
echo "6. 部署完成后，您将获得一个永久URL"
echo ""
echo "优点："
echo "- 免费额度足够小型教学使用"
echo "- 自动HTTPS"
echo "- 永久URL"
echo "- 自动部署"
echo ""
echo "注意：需要修改项目以适应Railway环境"

echo ""
echo "===== 方案二：使用Vercel（仅前端）+ Railway（后端） ====="
echo "1. 前端部署到Vercel："
echo "   - 访问 https://vercel.com 并注册账户"
echo "   - 连接GitHub仓库"
echo "   - Vercel会自动部署静态前端"
echo ""
echo "2. 后端部署到Railway："
echo "   - 按照方案一的步骤部署后端"
echo "   - 修改前端代码中的API URL为Railway提供的URL"
echo ""
echo "优点："
echo "- 前端部署更快"
echo "- 可以分别优化前端和后端"

echo ""
echo "===== 方案三：使用ngrok（临时、快速） ====="
echo "运行以下命令启动ngrok："
echo "./public-access.sh"
echo ""
echo "优点："
echo "- 无需修改代码"
echo "- 立即可用"
echo ""
echo "缺点："
echo "- URL每次重启都会变化"
echo "- 需要保持本地计算机运行"
echo "- 免费版有带宽限制"

echo ""
echo "===== 方案四：使用自己的云服务器 ====="
echo "1. 租赁云服务器（如阿里云、腾讯云、AWS等）"
echo "2. 安装Docker和Docker Compose"
echo "3. 上传项目文件"
echo "4. 运行部署脚本"
echo ""
echo "优点："
echo "- 完全控制"
echo "- 可自定义域名"
echo ""
echo "缺点："
echo "- 需要服务器维护知识"
echo "- 需要付费"

echo ""
echo "===== 推荐方案 ====="
echo "对于教学用途，我推荐使用方案一（Railway）或方案三（ngrok）"
echo "- 如果需要长期使用，选择Railway"
echo "- 如果只是临时演示，选择ngrok"